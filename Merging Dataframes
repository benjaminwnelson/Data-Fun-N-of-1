---
title: "Wearable Comparison"
author: Benjamin W. Nelson
output: html_notebook
---


##Set WD
```{r}
setwd("~/Desktop/Manuscripts/N of 1")
```


##Load Libraries
```{r}
library(psych); library(lubridate); library(shiny); library(ggplot2); library(dplyr); library(plyr)
```

##Import Datasets
```{r}
apple_heart_rate <- read.csv("apple_heart_rate.csv", header=TRUE, na.strings="?")

fitbit_heart_rate <- read.csv("fitbit_heart_rate_cleaned.csv", header=TRUE, na.strings="?")

ecg_heart_rate <- read.csv("ecg_heart_rate_final.csv", header=TRUE, na.strings="?")
```

##Check Apple Watch Dataset
```{r}
describe(apple_heart_rate)

str(apple_heart_rate) #need to change heart rate from numeric to integer

apple_heart_rate$apple_heart_rate <- as.numeric(as.character(apple_heart_rate$apple_heart_rate)) 

str(apple_heart_rate) #check to make sure heart rate variable changed to numeric

```

##Check Fitbit Dataset
```{r}
describe(fitbit_heart_rate)

str(fitbit_heart_rate) #need to change heart rate from numeric to integer

fitbit_heart_rate$fitbit_heart_rate <- as.numeric(as.character(fitbit_heart_rate$fitbit_heart_rate)) 

str(fitbit_heart_rate) #check to make sure heart rate variable changed to numeric

```

##Check ECG Dataset
```{r}
describe(ecg_heart_rate)

str(ecg_heart_rate) #heart rate is already an integer

```

##Merge Datasets. First merge Fitbit and ECG
```{r}
fitbit_ecg_merge <- merge(ecg_heart_rate, fitbit_heart_rate, by=c("date","time"), all=TRUE)

str(fitbit_ecg_merge)

write.csv(fitbit_ecg_merge, "fitbit_ecg_merge_final.csv") #merge worked

```

##Run correlation between fitbit and ECG.
```{r}
cor.test(fitbit_ecg_merge$fitbit_heart_rate, fitbit_ecg_merge$ecg_heart_rate, alternative = "two.sided", method = "pearson", conf.level = 0.95, na.omit=TRUE) #correlates at .90!
```

##Look at Apple Data
#Looks like there are duplicate entries
```{r}
View(apple_heart_rate)
```

##Remove Duplicate Apple Data Entries
```{r}
library("dplyr")
apple_heart_rate_cleaned<- distinct(apple_heart_rate)
```

##Merge Fitbit, Apple, and ECG
```{r}
wearable_merged <- merge(fitbit_ecg_merge, apple_heart_rate_cleaned, by=c("date","time"), all=TRUE)

str(wearable_merged)

write.csv(wearable_merged, "wearable_merge.csv") #merge worked
```


##Reorder Columns
```{r}
wearable_merge_final<- wearable_merged[c("date", "time", "ecg_heart_rate", "fitbit_heart_rate", "apple_heart_rate")]
str(wearable_merge_final)

write.csv(wearable_merge_final, "wearable_merge_final.csv") #merge worked
```

##Summary
```{r}
summary(wearable_merge_final)
```


##Correlation Between Apple Watch and Fitbit
```{r}
cor.test(wearable_merge_final$apple_heart_rate, wearable_merge_final$fitbit_heart_rate, alternative = "two.sided", method = "pearson", conf.level = 0.95, na.omit=TRUE) #correlate at .77
```

##Correlation Between Apple Watch and ECG
```{r}
cor.test(wearable_merge_final$apple_heart_rate, wearable_merge_final$ecg_heart_rate, alternative = "two.sided", method = "pearson", conf.level = 0.95, na.omit=TRUE) #correlate at .66
```

##Correlation Between Fitbit and ECG
```{r}
cor.test(wearable_merge_final$fitbit_heart_rate, wearable_merge_final$ecg_heart_rate, alternative = "two.sided", method = "pearson", conf.level = 0.95, na.omit=TRUE) #correlate at .88
```


#Apple and Fitbit Plot
```{r}
apple_fitbit_graph <- ggplot(wearable_merge_final, aes(apple_heart_rate, fitbit_heart_rate))
  #This creates the x and y axis of a graph

apple_fitbit_graph + geom_point()
  #This prints the graph with data points

+ labs (x= "Apple Watch 3", y = "Fitbit Charge 2")
  #This labels the x and y axis

+ geom_smooth()
  #This places a regression line through the data

geom_smooth(method = "lm")
  #adding method = "lm" to the geom_smooth() places a linear model to the data

```

#Apple and ECG Plot
```{r}
apple_ecg_graph <- ggplot(wearable_merge_final, aes(apple_heart_rate, ecg_heart_rate))
  #This creates the x and y axis of a graph

apple_ecg_graph + geom_point()
  #This prints the graph with data points

+ labs (x= "X Axis Name", y = "Y Axis Name")
  #This labels the x and y axis

+ geom_smooth()
  #This places a regression line through the data

geom_smooth(method = "lm")
  #adding method = "lm" to the geom_smooth() places a linear model to the data

```


#Fitbit and ECG Plot
```{r}
fitbit_ecg_graph <- ggplot(wearable_merge_final, aes(fitbit_heart_rate, ecg_heart_rate))
  #This creates the x and y axis of a graph

fitbit_ecg_graph + geom_point()
  #This prints the graph with data points

+ labs (x= "X Axis Name", y = "Y Axis Name")
  #This labels the x and y axis

+ geom_smooth()
  #This places a regression line through the data

geom_smooth(method = "lm")
  #adding method = "lm" to the geom_smooth() places a linear model to the data

```

##Correlation Matrix
```{r}
CorrelationMatrix<- cor(wearable_merge_final[,3:5], use = "complete.obs")
CorrelationMatrix
```

##Correlation Plot
```{r}
library(corrplot)
corrplot(CorrelationMatrix, method="circle", type="upper")
```


